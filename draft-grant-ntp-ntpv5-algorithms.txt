



Network Time Protocols                                          S. Grant
Internet-Draft                                              22 June 2025
Intended status: Informational                                          
Expires: 24 December 2025


                            NTPv5 Algorithms
                draft-grant-ntp-ntpv5-algorithms-latest

Abstract

   This document describes considerations of synchronisation algorithms
   with version 5 of the Network Time Protocol (NTP), and defines the
   use of NTP version 4's algorithm when used with NTP version 5.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://signalsforgranted.github.io/draft-grant-ntp-ntpv5-algorithms/
   draft-grant-ntp-ntpv5-algorithms.html.  Status information for this
   document may be found at https://datatracker.ietf.org/doc/draft-
   grant-ntp-ntpv5-algorithms/.

   Discussion of this document takes place on the Network Time Protocols
   Working Group mailing list (mailto:ntp@ietf.org), which is archived
   at https://mailarchive.ietf.org/arch/browse/ntp/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/ntp/.

   Source for this draft and an issue tracker can be found at
   https://github.com/signalsforgranted/draft-grant-ntp-
   ntpv5-algorithms.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 24 December 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Algorithm Considerations
     3.1.  Use of Extension Fields
     3.2.  Use of non-UTC timescales
     3.3.  Leap Seconds and Leap Second Smearing
   4.  NTPv4 Algorithm use with NTPv5
   5.  Security Considerations
   6.  IANA Considerations
   7.  References
     7.1.  Normative References
     7.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   NTP version 4 (NTPv4) [RFC5905] defines various algorithms and logic
   which handle several different aspects of acquiring and sustaining
   synchronisation between NTP clients and servers including filtering
   of measurements, security mechanisms, source selection, clock
   control, as well as other algorithms.  Later Khronos [RFC9523]
   defined a companion method to run alongside with NTPv4 clients which
   aims to detect and mitigate time-shifting based attacks.

   However, NTP version 5 (NTPv5) [I-D.draft-ietf-ntp-ntpv5] explicitly
   does not define synchronisation algorithms to allow for
   implementations to define their own which may be optimised for
   specific deployment use case or system constraints.  For all
   implementations there are many things that should be taken into
   consideration in the development of both new algorithms as well as
   the porting of existing algorithms to NTPv5.

   The decoupling of algorithms to the wire protocol is not new; PTP
   [IEEE1588-2019] has the concept of "profiles", each of which define
   different behaviours and algorithms adapted for specific deployments
   (for example in automotive or power industries), and may even include
   additional capabilities to the protocol (such as the "daily jam"
   function in [SMPTE2059] where discontinuity is deliberately
   transmitted to remove built up discrepency in values).

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Algorithm Considerations

   TODO: General considerations, including interop (When Algorithms
   Collide)

3.1.  Use of Extension Fields

   Algorithms may choose to require additional information be sent by
   either client or server, however this brings the risk of these fields
   not being sent by peers which do not support.  Algorithms SHOULD
   handle the absence of any extension fields and define behaviour when
   they are not present.

   TODO: Signalling of algorithms?  If so, this would likely require an
   IANA registry

3.2.  Use of non-UTC timescales

   In addition to UTC, NTPv5 includes support for the transmission of
   TAI, UT1, and leap-smeared UTC.  Implementations SHOULD NOT mix
   timestamps from different timescales when performing calculations,
   and it's recommended they minimise the conversion of timescales where
   possible.

3.3.  Leap Seconds and Leap Second Smearing

   TODO: Cover smearing and leap seconds.  NTPv5 already has normative
   language around not including leap seconds on smeared timescale,
   however, NTP implementations should have some accommodation for leap
   second action (adding/removing) that may be linked to synchronisation
   in some way.

4.  NTPv4 Algorithm use with NTPv5

   Support for NTPv4 algorithms is not required for NTPv5
   implementations, however those supporting both versions of NTP may
   find it easier to include it as a default or fall-back option in
   configurations where others are not set.

   NTPv5 introduces several key differences to NTPv4 that
   implementations should be aware of when either building new
   implementations of the NTPv4 algorithms or when adapting existing.
   Most notably, the timestamp format has been changed with NTPv5 to
   ensure longevity and prevent rollover in the immediate future, which
   should be taken into consideration when processing and producing
   packets.

   TODO: Put in any other points

5.  Security Considerations

   This document introduces no security considerations.

   TODO: Discuss general attacks on time via algorithms, e.g. time-
   shifting

6.  IANA Considerations

   This document has no IANA actions.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

7.2.  Informative References

   [I-D.draft-ietf-ntp-ntpv5]
              Lichvar, M. and T. Mizrahi, "Network Time Protocol Version
              5", Work in Progress, Internet-Draft, draft-ietf-ntp-
              ntpv5-04, 10 April 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-ntp-
              ntpv5-04>.

   [IEEE1588-2019]
              "IEEE Standard for a Precision Clock Synchronization
              Protocol for Networked Measurement and Control Systems",
              IEEE, DOI 10.1109/ieeestd.2020.9120376,
              ISBN ["9781504463416"], June 2020,
              <https://doi.org/10.1109/ieeestd.2020.9120376>.

   [RFC5905]  Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch,
              "Network Time Protocol Version 4: Protocol and Algorithms
              Specification", RFC 5905, DOI 10.17487/RFC5905, June 2010,
              <https://www.rfc-editor.org/rfc/rfc5905>.

   [RFC9523]  Rozen-Schiff, N., Dolev, D., Mizrahi, T., and M. Schapira,
              "A Secure Selection and Filtering Mechanism for the
              Network Time Protocol with Khronos", RFC 9523,
              DOI 10.17487/RFC9523, February 2024,
              <https://www.rfc-editor.org/rfc/rfc9523>.

   [SMPTE2059]
              "ST 2059-1:2015 : Generation and Alignment of Interface
              Signals to the SMPTE Epoch", The Society of Motion Picture
              and Television Engineers, DOI 10.5594/smpte.st2059-1.2015,
              ISBN ["9781614828631"], April 2015,
              <https://doi.org/10.5594/smpte.st2059-1.2015>.

Acknowledgments

   TODO acknowledge that perhaps this was not the smartest idea.

Author's Address

   Sarah Grant
   Email: sarah.grant.ietf@gmail.com
